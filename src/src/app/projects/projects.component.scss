.container {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  flex-flow: column;

  -webkit-flex: auto;
  -ms-flex: auto;
  flex: auto;

  height: 100%;
  width: 100%;

  background-color: blueviolet;
}

.filter {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;

    justify-content: center;
    align-items: center;
    align-content: center;

    -webkit-flex: 1 0 auto;
    -ms-flex: 1 0 auto;
    flex: 1 0 auto;

    -webkit-order: 0;
    -ms-flex-order: 0;
    order: 0;

    height: 4em;
    max-height: 4em;

    background-color: green;
  }

  .projects-container {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    flex-flow: row wrap;

    -webkit-flex: 10 0 auto;
    -ms-flex: 10 0 auto;
    flex: 10 0 auto;

    justify-content: center;
    align-items: flex-start;
    align-content: flex-start;

    -webkit-order: 1;
    -ms-flex-order: 1;
    order: 1;

    background-color: brown;
    
    height: 500px;
    overflow-y: auto;
    overflow-x: hidden;

    .animate {
      opacity: 0;
    }
  }

// animations
$items: 24;
$columns: 7;
$rows: $items / $columns;

@keyframes pulse {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@mixin animate($animation, $duration, $delay: 0s) {
  -webkit-animation: $animation $duration ease-in-out $delay;
  -moz-animation: $animation $duration ease-in-out $delay;
  -ms-animation: $animation $duration ease-in-out $delay;
  -o-animation: $animation $duration ease-in-out $delay;
  animation: $animation $duration ease-in-out $delay; 

  animation-fill-mode: forwards;
}
      

// choreographing fade
.projects-container .animate {
  @for $m from 0 to $rows {
    @for $n from 1 through $columns {
      &:nth-child(#{$n + $m * $columns}) {
        @include animate(pulse, 0.125s * $rows, 0.25s*(($m + $n) / $rows))
      }
    }
  }
}